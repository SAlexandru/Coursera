

public class PercolationStats {
	private double mean_ ;
	private double stddev_;
	private double confidenceLo_;
	private double confidenceHi_;
	
	public PercolationStats (int N, int T) {
		if (N <= 0 || T <= 0) {
			throw new IllegalArgumentException();
		}
		
		final double[] points = new double[T];
		for (int i = 0; i < T; ++i) {
			final Percolation p = new Percolation(N);
		
			int count = 0;
			while (!p.percolates()) {
				p.open(StdRandom.uniform(N) + 1, StdRandom.uniform(N) + 1);
				++count;
			}
			
			points[i] = (1.0 * count) / (1.0 * N * N);
		}
		
		mean_ = StdStats.mean(points);
		stddev_ = Math.sqrt(StdStats.stddev(points));
		
		confidenceLo_ = mean_ - (1.96 * stddev_) / (Math.sqrt(T));
		confidenceHi_ = mean_ - (1.96 * stddev_) / (Math.sqrt(T));
		
	}
	
	public double mean() {return mean_;}
	
	public double stddev() {return stddev_;}
	
	public double confidenceLo() {return confidenceLo_;}
	
	public double configdenceHi() {return confidenceHi_;}

	public static void main(String[] args) {
		final PercolationStats stats = new PercolationStats(Integer.parseInt(args[0]), Integer.parseInt(args[1]));
		
		System.out.println("mean                    = " + stats.mean());
		System.out.println("stddev                  = " + stats.stddev());
		System.out.println("95% confidence interval = " + stats.confidenceLo() + ", " + stats.configdenceHi());
	}
}
